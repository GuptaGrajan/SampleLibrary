// Generated by view binder compiler. Do not edit!
package com.example.baseproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.HorizontalScrollView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.baseproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottompickerContentViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnDone;

  @NonNull
  public final HorizontalScrollView hsvSelectedPhotos;

  @NonNull
  public final RecyclerView rcGallery;

  @NonNull
  public final LinearLayout selectedPhotosContainer;

  @NonNull
  public final FrameLayout selectedPhotosContainerFrame;

  @NonNull
  public final TextView selectedPhotosEmpty;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final RelativeLayout viewTitleContainer;

  private BottompickerContentViewBinding(@NonNull LinearLayout rootView, @NonNull Button btnDone,
      @NonNull HorizontalScrollView hsvSelectedPhotos, @NonNull RecyclerView rcGallery,
      @NonNull LinearLayout selectedPhotosContainer,
      @NonNull FrameLayout selectedPhotosContainerFrame, @NonNull TextView selectedPhotosEmpty,
      @NonNull TextView tvTitle, @NonNull RelativeLayout viewTitleContainer) {
    this.rootView = rootView;
    this.btnDone = btnDone;
    this.hsvSelectedPhotos = hsvSelectedPhotos;
    this.rcGallery = rcGallery;
    this.selectedPhotosContainer = selectedPhotosContainer;
    this.selectedPhotosContainerFrame = selectedPhotosContainerFrame;
    this.selectedPhotosEmpty = selectedPhotosEmpty;
    this.tvTitle = tvTitle;
    this.viewTitleContainer = viewTitleContainer;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottompickerContentViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottompickerContentViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottompicker_content_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottompickerContentViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_done;
      Button btnDone = ViewBindings.findChildViewById(rootView, id);
      if (btnDone == null) {
        break missingId;
      }

      id = R.id.hsv_selected_photos;
      HorizontalScrollView hsvSelectedPhotos = ViewBindings.findChildViewById(rootView, id);
      if (hsvSelectedPhotos == null) {
        break missingId;
      }

      id = R.id.rc_gallery;
      RecyclerView rcGallery = ViewBindings.findChildViewById(rootView, id);
      if (rcGallery == null) {
        break missingId;
      }

      id = R.id.selected_photos_container;
      LinearLayout selectedPhotosContainer = ViewBindings.findChildViewById(rootView, id);
      if (selectedPhotosContainer == null) {
        break missingId;
      }

      id = R.id.selected_photos_container_frame;
      FrameLayout selectedPhotosContainerFrame = ViewBindings.findChildViewById(rootView, id);
      if (selectedPhotosContainerFrame == null) {
        break missingId;
      }

      id = R.id.selected_photos_empty;
      TextView selectedPhotosEmpty = ViewBindings.findChildViewById(rootView, id);
      if (selectedPhotosEmpty == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.view_title_container;
      RelativeLayout viewTitleContainer = ViewBindings.findChildViewById(rootView, id);
      if (viewTitleContainer == null) {
        break missingId;
      }

      return new BottompickerContentViewBinding((LinearLayout) rootView, btnDone, hsvSelectedPhotos,
          rcGallery, selectedPhotosContainer, selectedPhotosContainerFrame, selectedPhotosEmpty,
          tvTitle, viewTitleContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
